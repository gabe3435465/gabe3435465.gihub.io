<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>ðŸ“ž JASEROP Connect</title>
  <style>
    body { background:#101010; color:#fff; font-family:sans-serif; text-align:center; }
    h1 { color:#00ffc3; }
    input, button { margin:10px; padding:10px 18px; border-radius:8px; border:none; font-weight:bold; }
    button { background:#00ffc3; cursor:pointer; }
    input { width:160px; text-align:center; font-size:18px; }
    video { width:45%; margin:10px; border:2px solid #00ffc3; border-radius:10px; }
  </style>
</head>
<body>
<h1>ðŸ“ž JASEROP Connect (GitHub Pages)</h1>

<p>Your code: <span id="myCode"></span></p>
<input id="friendCode" placeholder="Enter friend code">
<button id="connectBtn">Connect</button>

<br>
<video id="localVideo" autoplay muted></video>
<video id="remoteVideo" autoplay></video>

<!-- Firebase -->
<script src="https://www.gstatic.com/firebasejs/9.24.0/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.24.0/firebase-database-compat.js"></script>

<script>
  // ---- CONFIGURE FIREBASE ----
  const firebaseConfig = {
    apiKey: "YOUR_FIREBASE_API_KEY",
    authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
    databaseURL: "https://YOUR_PROJECT_ID.firebaseio.com",
    projectId: "YOUR_PROJECT_ID",
  };
  firebase.initializeApp(firebaseConfig);
  const db = firebase.database();

  // ---- YOTO CODE ----
  const myCode = Math.floor(100000 + Math.random() * 900000).toString();
  document.getElementById("myCode").textContent = myCode;

  const localVideo = document.getElementById("localVideo");
  const remoteVideo = document.getElementById("remoteVideo");
  const connectBtn = document.getElementById("connectBtn");
  const friendCodeInput = document.getElementById("friendCode");

  let room = myCode;
  const pc = new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});

  // ---- MEDIA ----
  navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(stream=>{
    localVideo.srcObject = stream;
    stream.getTracks().forEach(t=>pc.addTrack(t,stream));
  });

  pc.ontrack = e=>remoteVideo.srcObject = e.streams[0];
  pc.onicecandidate = e=>{
    if(e.candidate && room){
      db.ref('rooms/'+room+'/candidates').push(JSON.stringify(e.candidate));
    }
  };

  // ---- CONNECT ----
  connectBtn.onclick = async ()=>{
    const friendCode = friendCodeInput.value.trim();
    if(!friendCode) return alert("Enter a code!");
    room = friendCode;

    const roomRef = db.ref('rooms/'+room);

    // Watch for offer
    roomRef.on('value', async snap=>{
      const data = snap.val();
      if(data?.offer && !pc.currentRemoteDescription){
        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));
        const answer = await pc.createAnswer();
        await pc.setLocalDescription(answer);
        roomRef.update({answer: answer});
      }
    });

    // Watch for ICE
    db.ref('rooms/'+room+'/candidates').on('child_added', snap=>{
      const c = JSON.parse(snap.val());
      pc.addIceCandidate(new RTCIceCandidate(c));
    });

    // Send our offer if we are initiating
    const offer = await pc.createOffer();
    await pc.setLocalDescription(offer);
    roomRef.set({offer: offer});
  };
</script>
</body>
</html>
